ggpairs(learning2014,
mapping = aes(col = gender, alpha = 0.3),
lower = list(combo = wrap("facethist", bins = 20))
)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
pairs.panels (learning2014)
library(psych)
pairs.panels (learning2014)
pairs.panels (learning2014, col = learning2014$gender)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
library(dplyr)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
pairs.panels (learning2014)
library(GGally)
library(ggplot2)
# create a more advanced plot matrix with ggpairs()
ggpairs(learning2014,
mapping = aes(col = gender, alpha = 0.3),
lower = list(combo = wrap("facethist", bins = 20))
)
getwd()
? cor.test
cor.test(learning2014$attitude,learning2014$points)
p1 <- ggplot(learning2014, aes(x = attitude, y = points))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("relation between attitude and points")
print (p4)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
m1 <- lm(learning2014$points ~learning2014$attitude, data = learning2014)
results <- summary(m1)
knitr::kable(results$coefficients, digits=3, caption="Regression coefficients")
install.packages("dplyr")
install.packages("GGally")
install.packages("tidyverse")
library(dplyr)
library (ggplot2)
library(readxl)
getwd()
learning2014 <- read_excel("data/learning2014.xlsx")
View (learning2014)
dim (learning2014)
head (learning2014)
str(learning2014)
install.packages("dplyr")
install.packages("GGally")
install.packages("tidyverse")
install.packages("tidyverse")
ggpairs(learning2014,
mapping = aes(col = gender, alpha = 0.3),
lower = list(combo = wrap("facethist", bins = 20))
)
library(dplyr)
library (GGally)
library(ggplot2)
library(tidyverse)
library(psych)
pairs.panels (learning2014)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
setwd("~/IODS-project")
getwd()
learning2014 <- read_excel("data/learning2014.xlsx")
learning2014 <- readxl::read_excel("~/IODS-project/data/learning2014.xlsx") %>%
mutate_at(vars(gender), factor)
getwd()
setwd(getwd())
learning2014 <- read_excel("data/learning2014.xlsx")
install.packages ("xlsx")
install.packages ("xlsx")
learning2014 <- readxl::read_excel("~/IODS-project/data/learning2014.xlsx") %>%
mutate_at(vars(gender), factor)
learning2014 <- readxl::read_excel("C:\Users\maivu\OneDrive - University of Eastern Finland\Attachments\8 statistics\2 R program\r practice\IODS-project/data/learning2014.xlsx") %>%
getwd()
setwd(getwd())
learning2014 <- readxl::read_excel("data/learning2014.xlsx") %>%
mutate_at(vars(gender), factor)
View (learning2014)
getwd()
pairs.panels (learning2014)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
mydata <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep="\t", header=TRUE)
View (mydata)
mydata <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep=",", header=TRUE)
View (mydata)
#data description
# read data
# read the data into memory, separator is a tab ("\t") including header
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# print the "Attitude" column vector fo the lrn14 data
lrn14$Attitude
# create column 'attitude' by scaling the column "Attitue"
lrn14$attitude <- lrn14$Attitude/10
#creat 3 variables: deep_questions, surface_questions, strategic_questions from lrn14 dataset
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#creat 3 variables deep, surf, stra by select and mean of above variables. E.g:
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
strategic_columns <- select (lrn14, one_of (strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#creat keep_columns including: "gender","Age","attitude", "deep", "stra", "surf", "Points"
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
#creat data set learning2014 by select variable from keep_columns
learning2014 <-  select (lrn14, one_of(keep_columns))
head(learning2014)
dim(learning2014)
View (learning2014)
colnames(learning2014)
colnames(learning2014)[7] <- "points"
colnames(learning2014)[2] <- "age"
learning2014 <- filter (learning2014, points>0)
write.xlsx(learning2014,file="learning2014.xlsx", header=T)
# Save created data to folder 'data' as an Excel worksheet
# install.packages("openxlsx")
library("xlsx")
# Change working directory to IODS-folder
setwd("~/IODS-project")
# Change working directory to IODS-folder
#setwd("~/IODS-project")
setwd(getwd())
# Save created data to folder 'data' as an Excel worksheet
# install.packages("openxlsx")
library("xlsx")
# Save created data to folder 'data' as an Excel worksheet
# install.packages("openxlsx")
library("xlsx")
write.csv(learning2014, flie= "learning2014.csv")
#Mai Vu 10 Nov 19
#install some packages:
install.packages(c("dplyr", "xlsx", "ggplot2", "GGally"))
install.packages(c("dplyr", "xlsx", "ggplot2", "GGally"))
library (dplyr)
library (xlsx)
library(ggplot2)
library(GGally)
#data description
# read data
# read the data into memory, separator is a tab ("\t") including header
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# print the "Attitude" column vector fo the lrn14 data
lrn14$Attitude
# create column 'attitude' by scaling the column "Attitue"
lrn14$attitude <- lrn14$Attitude/10
#creat 3 variables: deep_questions, surface_questions, strategic_questions from lrn14 dataset
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#creat 3 variables deep, surf, stra by select and mean of above variables. E.g:
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
strategic_columns <- select (lrn14, one_of (strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#creat keep_columns including: "gender","Age","attitude", "deep", "stra", "surf", "Points"
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
#creat data set learning2014 by select variable from keep_columns
learning2014 <-  select (lrn14, one_of(keep_columns))
head(learning2014)
colnames(learning2014)[7] <- "points"
colnames(learning2014)[2] <- "age"
learning2014 <- filter (learning2014, points>0)
write.csv(learning2014, flie= "learning2018.csv", header = T)
write.csv(learning2014, flie= "learning2018.csv", header=T)
write.csv(as.matrix(learning2014), flie= "learning2018.csv", header=T)
write.xlsx(as.matrix(learning2014), flie= "learning2018.csv", header=T)
write.xlsx(learning2014, flie= "learning2018.csv", header=T)
mydata <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/learning2014.txt", sep=",", header=TRUE)
pairs(learning2014[!names(learning2014) %in% c("gender")],col=learning2014$gender)
pairs.panels (learning2014)
summary (learning2014$age)
#describe some variables
summary (c(learning2014$age,learning2014$deep, learning2014$stra, learning2014$surf, learning2014$points ))
#describe some variables
summary (c(learning2014$age,learning2014$deep, learning2014$stra, learning2014$surf, learning2014$points ))
#describe some variables
summaryvar <- learning2014 %>%summary (c(age,deep, stra, surf, points ))
#describe some variables
summaryvar <- learning2014 %>%summary (c(age, deep, stra, surf, points ))
#describe some variables
as.numeric(learning2014$age)
summaryvar <- learning2014 %>%summary (c(age, deep, stra, surf, points ))
summaryvar <- learning2014 %>%summary (c("age", "deep", "stra", "surf", "points" ))
print (summaryvar)
cor.test(learning2014$attitude,learning2014$points)
cor.test(learning2014$deep,learning2014$points)
cor.test(learning2014$stra,learning2014$points)
lm (points~attitude)
lm (attitude~points)
lm (points~attitude, data = learning2014)
m1 <- lm(learning2014$points ~learning2014$attitude, data = learning2014)
results <- summary(m1)
knitr::kable(results$coefficients, digits=3, caption="Regression coefficients")
m1 <- lm(learning2014$points ~learning2014$attitude, data = learning2014)
results <- summary(m1)
knitr::kable(results$coefficients, digits=3, caption="Regression coefficients")
library("readstata13")
library("car")
library ("psych")
library ("gmodels")
library ("Epi")
library("ggplot2")
library("sjPlot")
library("epiR")
library("Hmisc")
library("reshape2")
library("foreign")
library("aod")
library("plm")
library("dplyr")
library("tidyverse")
library("mlogit")
library ("lm4")
library ("pbkrtest")
library(dplyr)
library("bild")
library(plyr)
library("geepack")
library ("RStata")
library ("sas7bdat")
install.packages("readstata13")
install.packages (c( "DescTools", "rms", "tables", "foreign", "gmodels","ggplot2", "car", "survival", "boot", "cluster", "psych", "binom", "BMA", "ggthemes", "gridExtra", "dplyr", "survminer", "epiDisplay", "pwr"))
install.packages ("psych")
install.packages ("Epi")
install.packages("readstata13")
library("readstata13")
library("car")
library ("psych")
library ("gmodels")
library ("Epi")
library("ggplot2")
library("sjPlot")
library("epiR")
library("Hmisc")
library("reshape2")
library("foreign")
library("aod")
library("plm")
library("dplyr")
library("tidyverse")
library("mlogit")
library ("lm4")
library ("pbkrtest")
library(dplyr)
library("bild")
library(plyr)
library("geepack")
library ("RStata")
library ("sas7bdat")
install.packages("RStata")
library ("RStata")
st2<- read.dta13("M:/MEDALZ_analyysitila_374/Mai_CVDdruguse/cabgpciworkfile_postop191108.dta")
st2<- read.dta13("M:/MEDALZ_analyysitila_374/Mai_CVDdruguse/cabgpci/workfile_postop191108.dta")
View (st2)
library (survival)
library (survminer)
library (dplyr)
data (st2)
st2<- read.dta13("M:/MEDALZ_analyysitila_374/Mai_CVDdruguse/cabgpci/workfile_postop191108.dta")
glimpse(st2)
library(tidyr); library(dplyr); library(ggplot2)
dat <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ",", header = T)
View (dat)
head (dat)
dim (dat)
knitr::opts_chunk$set(echo = TRUE)
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
g1 <- ggplot(data = dat, aes(x = alc_use, fill = sex))
g1 + geom_bar()
g1 <- ggplot(data = dat, aes(x = alc_use, fill = age))
g1 + geom_line()
g1 <- ggplot(data = dat, aes(x = alc_use, fill = age))
g1 + geom_boxplot()
g1 <- ggplot(data = dat, aes(x = alc_use, y = age))
g1 + geom_boxplot()
g1 <- ggplot(data = dat, aes(x = alc_use, y = age))
g1 + geom_line()
g2 <- ggplot(data = dat, aes(x = alc_use) + geom_histogram(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use, y = age) + geom_histogram(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use, y = age) )
g2 + geom_histogram(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use, y = famrel) )
g2 + geom_ _bar(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use, y = famrel) )
g2 + geom_bar(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_bar(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_boxplot(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_histogram(color="white", fill="darkturquoise", binwidth = 2)
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_histogram
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_histogram()
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_histogram()
g2 <- ggplot(data = dat, aes(x = alc_use), fill = famrel  )
g2 + geom_bar()
g2 <- ggplot(data = dat, aes(x = alc_use, y=famrel), fill =  sex)
g2 + geom_bar()
? CrossTable
g2 <- ggplot(data = dat, aes(x = alc_use), fill =  sex)
g2 + geom_bar()
g2 <- ggplot(data = dat, aes(x = alc_use, fill = famrel ))
g2 + geom_bar()
g2 <- ggplot(data = dat, aes(x = alc_use, fill =  internet  ))
g2 + geom_bar()
g2 <- ggplot(data = dat, aes(x = alc_use, fill = absences ))
g2 + geom_bar()
logmodel1 <- glm(high_use ~ age+ sex + famrel + absences, data = dat, family = "binomial")
summary(logmodel1)
OR <- coef(logmodel1) %>% exp
CI <- confint(OR,level = 0.95)
logmodel1 <- glm(high_use ~ age+ sex + famrel + absences, data = dat, family = "binomial")
summary(logmodel1)
CI <- confint(logmode1,level = 0.95)
m <- glm(high_use ~ age+ sex + famrel + absences, data = dat, family = "binomial")
summary(logmodel1)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind (OR, CI)
g2 <- ggplot(data = dat, aes(x = alc_use, fill =  romantic ))
g2 + geom_bar()
g2 <- ggplot(data = dat, aes(x = high_use), fill = absences ))
g2 <- ggplot(data = dat, aes(x = high_use, y=absence))
g2 + geom_boxplot()
g2 <- ggplot(data = dat, aes(x = high_use, y= absence))
g2 + geom_boxplot()
g2 <- ggplot(data = dat, aes(x = high_use, y= absences))
g2 + geom_boxplot()
g3 <- ggplot(data = dat, aes(x = high_use, y= absences))
g3 + geom_boxplot()
g4 <- ggplot(data = dat, aes(x = high_use, y= age))
g4 + geom_boxplot()
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
summary(logmodel1)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind (OR, CI)
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
summary(logmodel1)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind (OR, CI)
m <- glm(high_use ~ , data = dat, family = "binomial")
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
summary(m)
#
gather(dat) %>% glimpse
# draw a bar plot of each variable
gather(dat) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free")
# look distribution of variables
# produce summary statistics by group
dat %>% group_by(sex) %>% summarise(count = n())
g2 <- ggplot(data = dat, aes(x = high_use, fill =  romantic ))
g2 + geom_bar()
g1 <- ggplot(data = dat, aes(x = high_use, fill = sex))
g1 + geom_bar()
g3 <- ggplot(data = dat, aes(x = high_use, y= absences))
g3 + geom_boxplot()
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
summary(logmodel1)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind (OR, CI)
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind (OR, CI)
library(tidyr); library(dplyr); library(ggplot2)
dat <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/dat.txt", sep = ",", header = T)
library(tidyr); library(dplyr); library(ggplot2)
dat <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/dat.txt", sep = ",", header = T)
library(tidyr)
library(dplyr)
library(ggplot2)
dat <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/dat.txt", sep = ",", header = T)
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets"
url_math <- paste(url, "student-mat.csv", sep = "/")
math <- read.table(url_math, sep = ";" , header=TRUE)
url_por <- paste(url, "student-por.csv", sep = "/")
por <- read.table(url_por, sep = ";", header = TRUE)
str(por)
str(math)
# access the 'tidyverse' packages dplyr and ggplot2
library(dplyr); library(ggplot2)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
glimpse(math_por)
str(math_por)
dat <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) { dat[column_name] <- round(rowMeans(two_columns))} else { dat[column_name] <- first_column }}
glimpse(dat)
"With the duplicates removed the data now has 382 observations and 33 variables"
install.packages(ggplot2)
library(ggplot2)
glimpse(math_por)
str(math_por)
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(math_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) { dat[column_name] <- round(rowMeans(two_columns))} else { dat[column_name] <- first_column }}
glimpse(dat)
"With the duplicates removed the data now has 382 observations and 33 variables"
library(ggplot2)
dat <- mutate(dat, dat_use = (Ddat + Wdat) / 2)
dat <- mutate(dat, high_use = dat_use > 2)
library(tidyr)
library(dplyr)
library(ggplot2)
dat <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ",", header = T)
View (dat)
head (dat)
dim (dat)
knitr::opts_chunk$set(echo = TRUE)
dat <- mutate(dat, dat_use = (Dalc + Walc) / 2)
dat <- mutate(dat, high_use = dat_use > 2)
glimpse(dat)
#load library
library(tidyr)
library(dplyr)
library(ggplot2)
#read data
dat <- read.table ("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep = ",", header = T)
# Have a look on data
View (dat)
head (dat)
dim (dat)
knitr::opts_chunk$set(echo = TRUE)
g1 <- ggplot(data = dat, aes(x = high_use, fill = sex))
g1 + geom_bar()
write.table(dat, file= "alc_use.cvs")
dat <- mutate(dat, alc_use = (Dalc + Walc) / 2)
dat <- mutate(dat, high_use = alc_use > 2)
write.table(dat, file= "alc_use.cvs")
glimpse(dat)
write.table(dat, file= "alc_use.csv")
install.packages(c("psych", "tidyverse"))
g2 <- ggplot(data = dat, aes(x = high_use, fill =  romantic ))
g2 + geom_bar()
g3 <- ggplot(data = dat, aes(x = high_use, y= absences))
g3 + geom_boxplot()
m <- glm(high_use ~ age+ sex + romantic+ absences, data = dat, family = "binomial")
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind (OR, CI)
probabilities <- predict(m, type = "response")
dat <- mutate(dat, probability = probabilities)
dat <- mutate(dat, prediction = probabilities > 0.5)
g <- ggplot(dat, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
probabilities <- predict(m, type = "")
probabilities <- predict(m, type = "")
View (dat)
? predict
probabilities <- predict(m, type = "response")
dat <- mutate(dat, probability = probabilities)
dat <- mutate(dat, prediction = probabilities > 0.5)
g <- ggplot(dat, aes(x = probability, y = high_use, col = prediction))
# tabulate the target variable versus the predictions
table(high_use = dat$high_use, prediction = dat$prediction)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = nrow(alc))
library(boot)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = nrow(alc))
}
summary (cv)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = nrow(alc))
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
library(boot)
cv <- cv.glm(data = dat, cost = loss_func, glmfit = m, K = nrow(alc))
summary (cv)
}
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)}
library(boot)
cv <- cv.glm(data = dat, cost = loss_func, glmfit = m, K = nrow(alc))
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)}
library(boot)
cv <- cv.glm(data = dat, cost = loss_func, glmfit = m, K = nrow(dat))
summary (cv)
git config --global user.email {mai.vu@uef.fi}
git config --global user.email "mai.vu@uef.fi"
? git config
git config --global user.email "mai.vu@uef.fi"
